<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2017-03-21 23:19:44.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Principal\BibliotecaBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Principal\BibliotecaBundle\Entity\Categorium
 *
 * @ORM\Entity()
 * @ORM\Table(name="Categoria")
 */
class Categorium
{
    /**
     * @ORM\Id
     * @ORM\Column(type="bigint")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=150, nullable=true)
     */
    protected $Categoria;

    /**
     * @ORM\OneToMany(targetEntity="CategoriaLibro", mappedBy="categorium")
     * @ORM\JoinColumn(name="id", referencedColumnName="Categoria_id")
     */
    protected $categoriaLibros;

    public function __construct()
    {
        $this->categoriaLibros = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Principal\BibliotecaBundle\Entity\Categorium
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of Categoria.
     *
     * @param string $Categoria
     * @return \Principal\BibliotecaBundle\Entity\Categorium
     */
    public function setCategoria($Categoria)
    {
        $this->Categoria = $Categoria;

        return $this;
    }

    /**
     * Get the value of Categoria.
     *
     * @return string
     */
    public function getCategoria()
    {
        return $this->Categoria;
    }

    /**
     * Add CategoriaLibro entity to collection (one to many).
     *
     * @param \Principal\BibliotecaBundle\Entity\CategoriaLibro $categoriaLibro
     * @return \Principal\BibliotecaBundle\Entity\Categorium
     */
    public function addCategoriaLibro(CategoriaLibro $categoriaLibro)
    {
        $this->categoriaLibros[] = $categoriaLibro;

        return $this;
    }

    /**
     * Remove CategoriaLibro entity from collection (one to many).
     *
     * @param \Principal\BibliotecaBundle\Entity\CategoriaLibro $categoriaLibro
     * @return \Principal\BibliotecaBundle\Entity\Categorium
     */
    public function removeCategoriaLibro(CategoriaLibro $categoriaLibro)
    {
        $this->categoriaLibros->removeElement($categoriaLibro);

        return $this;
    }

    /**
     * Get CategoriaLibro entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCategoriaLibros()
    {
        return $this->categoriaLibros;
    }

    public function __sleep()
    {
        return array('id', 'Categoria');
    }
}