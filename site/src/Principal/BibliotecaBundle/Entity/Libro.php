<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2017-03-23 16:41:41.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Principal\BibliotecaBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\HttpFoundation\File\File;
use Vich\UploaderBundle\Mapping\Annotation as Vich;

/**
 * Principal\BibliotecaBundle\Entity\Libro
 *
 * @ORM\Entity()
 * @Vich\Uploadable
 * @ORM\Table(name="Libro", indexes={ @ORM\Index(name="fk_Libro_Usuario1_idx", columns={"usuario_id"}), @ORM\Index(name="fk_Libro_Licencia1_idx", columns={"licencia_id"})})
 */
class Libro
{
    /**
     * @ORM\Id
     * @ORM\Column(type="bigint")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $Nombre;

    /**
     * @ORM\Column(type="string", length=45, nullable=true)
     */
    protected $Pagina;

    /**
     * @ORM\Column(type="string", length=45, nullable=true)
     */
    protected $Annio;

    /**
     * @ORM\Column(type="text", nullable=true)
     */
    protected $Sinopsis;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    protected $Aprobado;

    /**
     * @ORM\Column(type="text", nullable=true)
     */
    protected $Archivo;

    /**
     * NOTE: This is not a mapped field of entity metadata, just a simple property.
     * 
     * @Vich\UploadableField(mapping="libro", fileNameProperty="Archivo")
     * 
     * @var File
     */
    private $File;
    
    /**
     * NOTE: This is not a mapped field of entity metadata, just a simple property.
     * 
     * @Vich\UploadableField(mapping="libro", fileNameProperty="FotoName")
     * 
     * @var File
     */
    protected $Foto;
    
    /**
     * @ORM\Column(type="text", nullable=true)
     */
    protected $FotoName;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $FechaHora;

    /**
     * @ORM\Column(type="integer")
     */
    protected $Usuario_id;

    /**
     * @ORM\Column(type="integer")
     */
    protected $Licencia_id;
    
    /**
     * Many Users have Many Groups.
     * @ORM\ManyToMany(targetEntity="Categorium", inversedBy="libros")
     */
    protected $categoriaLibros;

    /**
     * @ORM\OneToMany(targetEntity="Comentario", mappedBy="libro")
     * @ORM\JoinColumn(name="id", referencedColumnName="Libro_id")
     */
    protected $comentarios;

    /**
     * @ORM\ManyToMany(targetEntity="Autor", inversedBy="libros")
     */
    protected $autor;

    /**
     * @ORM\ManyToOne(targetEntity="Usuario", inversedBy="libros")
     * @ORM\JoinColumn(name="usuario_id", referencedColumnName="id")
     */
    protected $usuario;

    /**
     * @ORM\ManyToOne(targetEntity="Licencium", inversedBy="libros")
     * @ORM\JoinColumn(name="licencia_id", referencedColumnName="id")
     */
    protected $licencium;

    public function __construct()
    {
        $this->categoriaLibros = new ArrayCollection();
        $this->autor = new ArrayCollection();
        $this->comentarios = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of Nombre.
     *
     * @param string $Nombre
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setNombre($Nombre)
    {
        $this->Nombre = $Nombre;

        return $this;
    }

    /**
     * Get the value of Nombre.
     *
     * @return string
     */
    public function getNombre()
    {
        return $this->Nombre;
    }

    /**
     * Set the value of Pagina.
     *
     * @param string $Pagina
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setPagina($Pagina)
    {
        $this->Pagina = $Pagina;

        return $this;
    }

    /**
     * Get the value of Pagina.
     *
     * @return string
     */
    public function getPagina()
    {
        return $this->Pagina;
    }

    /**
     * Set the value of Annio.
     *
     * @param string $Annio
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setAnnio($Annio)
    {
        $this->Annio = $Annio;

        return $this;
    }

    /**
     * Get the value of Annio.
     *
     * @return string
     */
    public function getAnnio()
    {
        return $this->Annio;
    }

    /**
     * Get the value of Licencia.
     *
     * @return string
     */
    public function getLicencia()
    {
        return $this->Licencia;
    }

    /**
     * Set the value of Sinopsis.
     *
     * @param string $Sinopsis
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setSinopsis($Sinopsis)
    {
        $this->Sinopsis = $Sinopsis;

        return $this;
    }

    /**
     * Get the value of Sinopsis.
     *
     * @return string
     */
    public function getSinopsis()
    {
        return $this->Sinopsis;
    }

    /**
     * Set the value of Aprobado.
     *
     * @param boolean $Aprobado
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setAprobado($Aprobado)
    {
        $this->Aprobado = $Aprobado;

        return $this;
    }

    /**
     * Get the value of Aprobado.
     *
     * @return boolean
     */
    public function getAprobado()
    {
        return $this->Aprobado;
    }

    /**
     * Set the value of Archivo.
     *
     * @param string $Archivo
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setArchivo($Archivo)
    {
        $this->Archivo = $Archivo;

        return $this;
    }

    /**
     * Get the value of Archivo.
     *
     * @return string
     */
    public function getArchivo()
    {
        return $this->Archivo;
    }

    /**
     * If manually uploading a file (i.e. not using Symfony Form) ensure an instance
     * of 'UploadedFile' is injected into this setter to trigger the  update. If this
     * bundle's configuration parameter 'inject_on_load' is set to 'true' this setter
     * must be able to accept an instance of 'File' as the bundle will inject one here
     * during Doctrine hydration.
     *
     * @param File|\Symfony\Component\HttpFoundation\File\UploadedFile $image
     *
     * @return Product
     */
    public function setFile(File $libro = null)
    {
        $this->File = $libro;

        return $this;
    }

    /**
     * @return File|null
     */
    public function getFile()
    {
        return $this->File;
    }

    
    /**
     * If manually uploading a file (i.e. not using Symfony Form) ensure an instance
     * of 'UploadedFile' is injected into this setter to trigger the  update. If this
     * bundle's configuration parameter 'inject_on_load' is set to 'true' this setter
     * must be able to accept an instance of 'File' as the bundle will inject one here
     * during Doctrine hydration.
     *
     * @param File|\Symfony\Component\HttpFoundation\File\UploadedFile $image
     *
     * @return Product
     */
    public function setFoto(File $Foto = null)
    {
        $this->Foto = $Foto;

        return $this;
    }

    /**
     * Get the value of Foto.
     *
     * @return string
     */
    public function getFoto()
    {
        return $this->Foto;
    }
    
    /**
     * Set the value of FotoName.
     *
     * @param string $FotoName
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setFotoName($FotoName)
    {
        $this->FotoName = $FotoName;

        return $this;
    }

    /**
     * Get the value of Foto.
     *
     * @return string
     */
    public function getFotoName()
    {
        return $this->FotoName;
    }

    /**
     * Set the value of FechaHora.
     *
     * @param datetime $FechaHora
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setFechaHora($FechaHora)
    {
        $this->FechaHora = $FechaHora;

        return $this;
    }

    /**
     * Get the value of FechaHora.
     *
     * @return datetime
     */
    public function getFechaHora()
    {
        return $this->FechaHora;
    }

    /**
     * Set the value of Usuario_id.
     *
     * @param integer $Usuario_id
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setUsuarioId($Usuario_id)
    {
        $this->Usuario_id = $Usuario_id;

        return $this;
    }

    /**
     * Get the value of Usuario_id.
     *
     * @return integer
     */
    public function getUsuarioId()
    {
        return $this->Usuario_id;
    }

    /**
     * Set the value of Licencia_id.
     *
     * @param integer $Licencia_id
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setLicenciaId($Licencia_id)
    {
        $this->Licencia_id = $Licencia_id;

        return $this;
    }

    /**
     * Get the value of Licencia_id.
     *
     * @return integer
     */
    public function getLicenciaId()
    {
        return $this->Licencia_id;
    }

    /**
     * Add CategoriaLibro entity to collection (one to many).
     *
     * @param \Principal\BibliotecaBundle\Entity\Libro $categoriaLibro
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function addCategoriaLibro($categoriaLibro)
    {
        $categoriaLibro->setLibro($this);
        $this->categoriaLibros[] = $categoriaLibro;

        return $this;
    }

    /**
     * Remove CategoriaLibro entity from collection (one to many).
     *
     * @param \Principal\BibliotecaBundle\Entity\CategoriaLibro $categoriaLibro
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function removeCategoriaLibro(Categorium $categoriaLibro)
    {
        $this->categoriaLibros->removeElement($categoriaLibro);

        return $this;
    }

    /**
     * Get CategoriaLibro entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCategoriaLibros()
    {
        return $this->categoriaLibros;
    }

    /**
     * Add Comentario entity to collection (one to many).
     *
     * @param \Principal\BibliotecaBundle\Entity\Comentario $comentario
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function addComentario(Comentario $comentario)
    {
        $this->comentarios[] = $comentario;

        return $this;
    }

    /**
     * Remove Comentario entity from collection (one to many).
     *
     * @param \Principal\BibliotecaBundle\Entity\Comentario $comentario
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function removeComentario(Comentario $comentario)
    {
        $this->comentarios->removeElement($comentario);

        return $this;
    }

    /**
     * Get Comentario entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getComentarios()
    {
        return $this->comentarios;
    }
    
    /**
     * Add CategoriaLibro entity to collection (one to many).
     *
     * @param \Principal\BibliotecaBundle\Entity\Libro $categoriaLibro
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function addAutor($autor)
    {
        $autor->setLibro($this);
        $this->autor[] = $autor;

        return $this;
    }

    /**
     * Remove CategoriaLibro entity from collection (one to many).
     *
     * @param \Principal\BibliotecaBundle\Entity\CategoriaLibro $categoriaLibro
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function removeAutor(Autor $autor)
    {
        $this->autor->removeElement($autor);

        return $this;
    }

    /**
     * Get CategoriaLibro entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAutor()
    {
        return $this->autor;
    }

    /**
     * Set Usuario entity (many to one).
     *
     * @param \Principal\BibliotecaBundle\Entity\Usuario $usuario
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setUsuario(Usuario $usuario = null)
    {
        $this->usuario = $usuario;

        return $this;
    }

    /**
     * Get Usuario entity (many to one).
     *
     * @return \Principal\BibliotecaBundle\Entity\Usuario
     */
    public function getUsuario()
    {
        return $this->usuario;
    }

    /**
     * Set Licencium entity (many to one).
     *
     * @param \Principal\BibliotecaBundle\Entity\Licencium $licencium
     * @return \Principal\BibliotecaBundle\Entity\Libro
     */
    public function setLicencium(Licencium $licencium = null)
    {
        $this->licencium = $licencium;

        return $this;
    }

    /**
     * Get Licencium entity (many to one).
     *
     * @return \Principal\BibliotecaBundle\Entity\Licencium
     */
    public function getLicencium()
    {
        return $this->licencium;
    }

    public function __sleep()
    {
        return array('id', 'Nombre', 'Pagina', 'Annio', 'Licencia', 'Sinopsis', 'Aprobado', 'Archivo', 'Foto', 'FechaHora', 'Usuario_id', 'Licencia_id');
    }

    public function __toString()
    {
        return $this->Nombre;
    }
}
